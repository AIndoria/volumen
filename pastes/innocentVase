mod options;
mod utils;

use std::{
    fs::{create_dir_all, File},
    io::{Read, Write},
    net::{TcpListener, TcpStream},
    sync::Arc,
    thread,
};

use anyhow::{bail, Context, Result};
use structopt::StructOpt;

use options::Opt;

fn main() -> Result<()> {
    let opt: Arc<Opt> = Arc::new(Opt::from_args());

    create_dir_all(&opt.output).context(format!(
        "Failed to create directory `{}`",
        opt.output.display()
    ))?;
    match utils::dir_is_writable(&opt.output) {
        Ok(false) | Err(_) => {
            bail!(format!("`{}` is not writeable", opt.output.display()));
        }
        _ => {}
    }
